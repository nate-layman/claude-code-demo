---
title: "Claude Code"
subtitle: "The Developer Productivity Multiplier"
author: "Nate Layman"
format:
  revealjs:
    theme: white
    transition: slide
    background-transition: fade
    highlight-style: github
    self-contained: true
    embed-resources: true
---

## Follow Along

**Live Presentation:** https://nate-layman.github.io/claude-code-demo/claude-code-presentation.html

---

# What is Claude?

- Anthropic's advanced AI assistant
- Conversational AI for various tasks
- General-purpose reasoning and text generation
- Web-based chat interface

---

# Agentic vs Non-Agentic LLMs

:::: {.columns}

::: {.column width="50%"}
## Non-Agentic AI
**ChatGPT, Claude Chat, Gemini**

- You ask, AI responds
- No environment interaction
- Passive assistance
- Copy-paste workflow
:::

::: {.column width="50%"}
## Agentic AI
**Claude Code**

- AI takes actions in your environment
- File system access and manipulation
- Tool usage and automation
- Active collaboration partner
:::

::::

---

# How Much Does It Cost?

:::: {.columns}

::: {.column width="50%"}
## API Per-Token Models
**ChatGPT API, Claude API**

- Pay per input/output token
- Costs scale with usage
- Unpredictable monthly bills
- Expensive for large codebases
- Claude 4 Sonnet costs 20x Gemini Flash
:::

::: {.column width="50%"}
## Subscription Models
**Claude Code, GitHub Copilot**

- Fixed monthly cost ($20-60/month)
- Unlimited usage within limits
- Predictable budgeting
- Better value for heavy development work
:::

::::

---

# How to Install Claude Code

```bash
# Simple installation process
npm install -g @anthropic/claude-code

# Authentication
claude-code auth login

# Start using in any project
cd your-project
claude-code
```

Quick setup, works immediately with your existing tools.

---

# Why Terminal-Based? IDE Independence

![](https://imgs.xkcd.com/comics/workflow.png)

:::: {.columns}

::: {.column width="50%"}
## Works with ANY IDE
- VS Code, IntelliJ, Vim, Emacs
- Sublime, Atom, whatever you use
- No need to learn another IDE
- Integrates with existing workflow
:::

::: {.column width="50%"}
## Benefits
- Lightweight and fast
- Universal compatibility
- No workflow disruption
- Terminal-native automation
:::

::::

---

# Live Demonstration: File Organization

:::: {.columns}

::: {.column width="50%"}
## The Problem
**Messy Notes Folder:**

- Random filenames
- Inconsistent extensions
- No logical organization
- Mixed content types

*Sound familiar?*
:::

::: {.column width="50%"}
## Claude Code Solution
**Automated Organization:**

- Analyze file contents
- Create logical structure
- Rename consistently
- Organize by topic/date

*5 minutes vs 5 hours*
:::

::::

---

# The Copy-Paste Problem

![](https://imgs.xkcd.com/comics/tech_support_cheat_sheet.png)

:::: {.columns}

::: {.column width="50%"}
## Traditional AI Workflow
1. Find the bug
2. Copy code to ChatGPT
3. Wait for response
4. Copy solution back
5. Test... it breaks
6. Copy more context
7. Repeat...
:::

::: {.column width="50%"}
## The Issues
- Context loss at each step
- Manual copy-paste labor
- Integration gaps
- Scaling problems
- "Google the program name plus keywords"
:::

::::

---

# Automation Reality Check

![](https://imgs.xkcd.com/comics/automation.png)

**Theory:** Automation saves time by reducing repetitive work

**Reality:** Programming the automation often takes longer than the original task

**Claude Code Solution:** Pre-built automation that actually works

---

# Competitive Landscape: Claude Code vs The Field

:::: {.columns}

::: {.column width="50%"}
## Performance Metrics
- **GitHub Copilot:** 55% faster task completion
- **Cursor:** $9B valuation, excellent multi-file editing
- **Claude Code:** Superior reasoning, unlimited daily use
:::

::: {.column width="50%"}
## Key Differentiators
- **Context awareness:** Full project understanding
- **Cost predictability:** No surprise throttling
- **Terminal integration:** Works with any setup
- **Housekeeping automation:** Beyond just code
:::

::::

---

# Is Your Automation Worth It?

![](https://imgs.xkcd.com/comics/is_it_worth_the_time.png)

Claude Code eliminates the "automation overhead" - you get productivity gains without the setup cost.

---

# Claude Code: Productivity Multiplier

**Documented Benefits:**
- Direct file manipulation capabilities
- Multi-file awareness and contextual intelligence
- 3x productivity gains achievable with proper AI assistance

**Real-World Impact:**
- Refactor functions across 47 files in 5 minutes
- Automated test generation and documentation
- Consistent code quality enforcement

---

# Advanced Housekeeping & Automation

Beyond code generation:

- **File organization at scale**
  - Pattern recognition for consistent naming
  - Bulk operations across multiple files
  - Automated folder structure creation

- **Project maintenance**
  - Documentation generation and updates
  - Code quality and consistency enforcement
  - Dependency management and updates

---

# The Power of Multi-File Context

Traditional AI sees snippets. Claude Code sees your entire project:

- **Understanding relationships** between files
- **Cross-file dependencies** and imports
- **Architectural patterns** and conventions
- **Holistic refactoring** across the codebase

Example: Rename a function used in 47 files across 12 modules - Claude Code updates everything consistently.

---

# Claude Code's Vision Scope

```
project-root/
├── src/           ← Claude Code can see
├── tests/         ← Claude Code can see
├── docs/          ← Claude Code can see
├── package.json   ← Claude Code can see
└── ../other-projects/  ← Outside scope
```

:::: {.columns}

::: {.column width="50%"}
### What Claude Code Sees
- **Full project context**
- **All source files**
- **Tests and documentation**
- **Configuration files**
:::

::: {.column width="50%"}
### Security Benefits
- **Project-root bounded access**
- **No access to parent directories**
- **Focused, relevant assistance**
:::

::::

---

# GitHub Integration Made Simple

![](https://imgs.xkcd.com/comics/git.png)

No more "delete the project and download a fresh copy"

**Claude Code handles:**
- Meaningful commit message generation
- Branch management and merging
- Pull request creation with detailed descriptions
- Issue tracking and project management

---

# Enterprise & Team Benefits

:::: {.columns}

::: {.column width="50%"}
### Security & Privacy
- Project-scoped access only
- No data sent outside project boundary
- Enterprise-grade security controls
:::

::: {.column width="50%"}
### Team Collaboration
- Consistent code quality across team
- Faster onboarding for new developers
- Reduced technical debt accumulation
:::

::::

**Team Multiplier Effect:** Junior developers work at senior level, seniors focus on architecture.

---

# Development Workflow Enhancement

End-to-end development support:

1. **Planning** - Architecture suggestions and decisions
2. **Implementation** - Multi-file code generation
3. **Testing** - Comprehensive test coverage
4. **Documentation** - Automated docs and comments
5. **Deployment** - Git operations and CI/CD
6. **Maintenance** - Refactoring and updates

From idea to deployed feature, Claude Code handles the routine work.

---

# Key Benefits Summary

:::: {.columns}

::: {.column width="33%"}
### Productivity Multiplier
- **3x faster** development
- Reduced context switching
- Automated routine tasks
:::

::: {.column width="33%"}
### Context-Aware
- Full project understanding
- Consistent coding patterns
- Relationship-aware refactoring
:::

::: {.column width="33%"}
### Integrated Workflow
- IDE-independent
- Git/GitHub automation
- End-to-end support
:::

::::

---

# Thank You

## Questions?

**Claude Code: Your AI development partner**

Ready to multiply your productivity while maintaining your preferred development environment.

---